{
	"info": {
		"_postman_id": "6a8b55c7-a20b-46f6-8a74-8164d7fb82c2",
		"name": "Full Stack QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40791490"
	},
	"item": [
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"User is created -> Setting ID as a variable\", () => {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    pm.expect(response).to.haveOwnProperty(\"id\");\r",
							"    pm.expect(response.id).to.be.a(\"number\");\r",
							"\r",
							"    pm.collectionVariables.set(\"userId\", response.id);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"userName\", \"Jamie Smith\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{$randomExampleEmail}}\",\r\n    \"name\": \"{{userName}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"status\": \"active\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v2/users",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Created user is returned\", () => {\r",
							"    const response = pm.response.json();\r",
							"\r",
							"    const userId = pm.collectionVariables.get(\"userId\");\r",
							"    const userName = pm.collectionVariables.get(\"userName\");\r",
							"\r",
							"    pm.expect(response).to.haveOwnProperty(\"id\");\r",
							"    pm.expect(response.id).to.be.a(\"number\").and.to.eql(userId);\r",
							"\r",
							"    pm.expect(response).to.haveOwnProperty(\"name\");\r",
							"    pm.expect(response.name).to.be.a(\"string\").and.to.eql(userName);\r",
							"\r",
							"    pm.expect(response).to.haveOwnProperty(\"email\");\r",
							"    pm.expect(response.email).to.be.a(\"string\").and.to.contain(\"@example.\");\r",
							"\r",
							"    pm.expect(response).to.haveOwnProperty(\"gender\");\r",
							"    pm.expect(response.gender).to.be.a(\"string\").and.to.be.oneOf([\"female\", \"male\"]);\r",
							"\r",
							"    pm.expect(response).to.haveOwnProperty(\"status\");\r",
							"    pm.expect(response.status).to.be.a(\"string\").and.to.eql(\"active\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/v2/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const token = pm.collectionVariables.get(\"token\");\r",
							"const userId = pm.collectionVariables.get(\"userId\");\r",
							"\r",
							"const request = {\r",
							"    method: 'GET',\r",
							"    url: `https://gorest.co.in/public/v2/users/${userId}`,\r",
							"    header: {\r",
							"        'Authorization': `Bearer ${token}`\r",
							"    }\r",
							"};\r",
							"\r",
							"const userName = pm.collectionVariables.get(\"userName\");\r",
							"\r",
							"pm.sendRequest(request, (error, response) => {\r",
							"    if (error) {\r",
							"        console.error(error);\r",
							"    }\r",
							"\r",
							"    pm.test(\"Requested user is updated\", () => {\r",
							"        pm.expect(error).to.be.null;\r",
							"        response = response.json();\r",
							"        pm.expect(response).to.haveOwnProperty(\"name\");\r",
							"        pm.expect(response.name).to.be.a(\"string\").and.to.eql(userName);\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"userName\", \"Jamie Williams\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{userName}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/public/v2/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"const token = pm.collectionVariables.get(\"token\");\r",
							"const userId = pm.collectionVariables.get(\"userId\");\r",
							"\r",
							"const request = {\r",
							"    method: 'GET',\r",
							"    url: `https://gorest.co.in/public/v2/users/${userId}`,\r",
							"    header: {\r",
							"        'Authorization': `Bearer ${token}`\r",
							"    }\r",
							"};\r",
							"\r",
							"pm.sendRequest(request, (error, response) => {\r",
							"    if (error) {\r",
							"        console.error(error);\r",
							"    }\r",
							"\r",
							"    pm.test(\"Requested user is removed\", () => {\r",
							"        pm.expect(error).to.be.null;\r",
							"        response = response.json();\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\");\r",
							"        pm.expect(response.message).to.be.a(\"string\").and.to.eql(\"Resource not found\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/public/v2/users/:userId",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"public",
						"v2",
						"users",
						":userId"
					],
					"variable": [
						{
							"key": "userId",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://gorest.co.in",
			"type": "string"
		},
		{
			"key": "token",
			"value": "ADD YOUR TOKEN",
			"type": "string"
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "userName",
			"value": "Jamie Smith",
			"type": "string"
		},
		{
			"key": "gender",
			"value": "female",
			"type": "string"
		}
	]
}